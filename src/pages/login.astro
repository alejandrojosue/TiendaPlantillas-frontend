---
import { PUBLIC_COMPANY_NAME } from "../env/config";
import Layout from "../layouts/Layout.astro";
import PrettyForm from "../components/common/PrettyForm.astro";
export const prerender = false;
const token = Astro.cookies.get("jwt")?.value;
if (token) return Astro.redirect(`/user/profile`);
---

<Layout title="Login">
  <PrettyForm>
    <img
      src="/public/favicon.svg"
      alt="icon"
      width="60"
      height="60"
      slot="header-before-form"
      class="mx-auto bg-white rounded-lg"
    />
    <h1 slot="header-before-form" class="text-center text-3xl text-slate-400">
      Bienvenido a {PUBLIC_COMPANY_NAME}
    </h1>
    <span slot="header-before-form" class="text-center text-lg text-slate-500">
      Inicie sesión en su cuenta {PUBLIC_COMPANY_NAME}
    </span>
    <label class="flex flex-col my-2 text-slate-400 font-semibold">
      Email:
      <input
        type="email"
        name="email"
        required
        class="rounded-md my-1 bg-transparent border border-slate-400 p-3 text-slate-500 focus:text-slate-300"
      />
    </label>
    <label class="flex flex-col my-2 text-slate-400 font-semibold">
      Password:
      <input
        type="password"
        name="password"
        required
        class="rounded-md my-1 bg-transparent border border-slate-400 p-3 text-slate-500 focus:text-slate-300"
      />
    </label>
    <section slot="footer-after-form" class="mx-auto">
      <p class="text-slate-400">¿No tienes cuenta? <a href="/register" class="text-blue-500 hover:underline">Registrarme</a></p>
    </section>
  </PrettyForm>
  <script>
    import UserRepository from "../repositories/UserRepository";
    import { setCookie } from "../util/cookies";

    document.querySelector("form")?.addEventListener("submit", async (e) => {
      e.preventDefault();
      const form = e.target;
      const data = new FormData(form as HTMLFormElement);
      const userRepository = new UserRepository();
      const identifier = data.get("email") as string;
      const password = data.get("password") as string;
      const user = await userRepository.signin(identifier, password);
      if (user instanceof Error) {
        alert(user.message);
      } else {
        //@ts-ignore
        setCookie("email", user.user.email as string);
        //@ts-ignore
        setCookie("jwt", user.jwt as string);
        //@ts-ignore
        setCookie("id", user.user.id + "");
        //@ts-ignore
        setCookie("username", user.user.username as string);
        location.href = "/user/profile";
      }
    });
  </script>
</Layout>
