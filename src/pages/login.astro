---
import { PUBLIC_COMPANY_NAME } from "../env/config";
import Layout from "../layouts/Layout.astro";
import UserRepository from "../repositories/UserRepository";

export const prerender = false;
const token = Astro.cookies.get("jwt")?.value;
let errorMessage = "";
if (token) return Astro.redirect(`/user/profile`);
---

<Layout title="Login">
  <div
    class="mx-auto lg:max-w-lg md:max-w-sm bg-slate-800 p-8 flex flex-col rounded-md gap-4"
  >
    <img
      src="/public/favicon.svg"
      alt="icon"
      width="60"
      height="60"
      class="mx-auto bg-white rounded-lg"
    />
    <h1 class="text-center text-3xl text-slate-400">
      Bienvenido a {PUBLIC_COMPANY_NAME}
    </h1>
    <span class="text-center text-lg text-slate-500">
      Inicie sesi√≥n en su cuenta {PUBLIC_COMPANY_NAME}
    </span>
    <form method="POST" class="flex flex-col">
      <label class="flex flex-col my-2 text-slate-400 font-semibold">
        Email:
        <input
          type="email"
          name="email"
          required
          class="rounded-md my-1 bg-transparent border border-slate-400 p-3 text-slate-500 focus:text-slate-300"
        />
      </label>
      <label class="flex flex-col my-2 text-slate-400 font-semibold">
        Password:
        <input
          type="password"
          name="password"
          required
          class="rounded-md my-1 bg-transparent border border-slate-400 p-3 text-slate-500 focus:text-slate-300"
        />
      </label>
      <button
        type="submit"
        class="flex-row text-2xl
      justify-center cursor-pointer hover:bg-slate-700
      focus:ring-4 focus:outline-none focus:ring-[#1da1f2]/50
      font-medium rounded-lg p-2.5 text-center
      inline-flex items-center dark:focus:ring-[#1da1f2]/55
      mr-2 hover:shadow-lg transition-all duration-200
      ease-in-out hover:scale-110 scale-90 gap-x-2
      opacity-90 hover:opacity-100"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="icon icon-tabler icon-tabler-brand-telegram"
          width="25"
          height="25"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
          <path d="M15 10l-4 4l6 6l4 -16l-18 7l4 2l2 6l3 -4"></path>
        </svg>
        Enviar</button
      >
    </form>
    {errorMessage && <div class="text-red-500">{errorMessage}</div>}
  </div>
  <script>
    import UserRepository from "../repositories/UserRepository";
    import {setCookie} from "../util/cookies"

    document.querySelector("form")?.addEventListener("submit", async (e) => {
      e.preventDefault();
      const form = e.target;
      const data = new FormData(form as HTMLFormElement);
      const userRepository = new UserRepository();
      const identifier = data.get("email") as string;
      const password = data.get("password") as string;
      const user = await userRepository.signin(identifier, password);
      if(user instanceof Error){
        alert(user.message);
      }else{
        setCookie('email', user.email as string)
        //@ts-ignore
        setCookie('jwt', user.jwt as string)
        setCookie('id', user.id + '')
        setCookie('username', user.username as string)

      }
      location.href = '/user/profile'
    });
  </script>
</Layout>
